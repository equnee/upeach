"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const saber_utils_1 = require("saber-utils");
class BrowserApi extends Set {
    constructor(api) {
        super();
        this.api = api;
    }
    /**
     * Register a file that implements Saber's browser API
     */
    add(filepath) {
        super.add(filepath);
        return this;
    }
    async reload() {
        const files = [...this.values()].map((file, i) => {
            const name = `_${path_1.default.basename(file).replace(/\W/gi, '_')}_${i}`;
            return {
                name,
                path: saber_utils_1.slash(file)
            };
        });
        const output = `
      ${files
            .map(file => `var ${file.name} = require("${file.path}").default`)
            .join('\n')}

      var themeBrowserApi
      var rTheme = require.context('#theme', false, /\\.\\/saber-browser\\.[jt]s$/)
      rTheme.keys().forEach(function (k) {
        themeBrowserApi = rTheme(k).default
      })

      export default function (context) {
        ${files
            .map(file => `typeof ${file.name} === 'function' && ${file.name}(context)`)
            .join('\n')}
        typeof themeBrowserApi === 'function' && themeBrowserApi(context)
      }`;
        await saber_utils_1.fs.outputFile(this.api.resolveCache('extend-browser-api.js'), output, 'utf8');
    }
}
exports.BrowserApi = BrowserApi;
