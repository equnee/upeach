"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tapable_1 = require("tapable");
exports.hooks = {
    // Before all user plugins have been applied
    beforePlugins: new tapable_1.AsyncSeriesHook(),
    filterPlugins: new tapable_1.SyncWaterfallHook(['plugins']),
    // After all user plugins have been applied
    afterPlugins: new tapable_1.AsyncSeriesHook(),
    // Before running the build process
    beforeRun: new tapable_1.AsyncSeriesHook(),
    onUpdateConfigFile: new tapable_1.AsyncSeriesHook(),
    // Extend webpack config
    chainWebpack: new tapable_1.SyncHook(['webpackChain', 'opts']),
    getWebpackConfig: new tapable_1.SyncWaterfallHook(['config', 'opts']),
    // Extend markdown-it config
    chainMarkdown: new tapable_1.SyncHook(['config']),
    chainTemplate: new tapable_1.SyncHook(['config']),
    emitRoutes: new tapable_1.AsyncSeriesHook(),
    // Called after running webpack
    afterBuild: new tapable_1.AsyncSeriesHook(),
    // Called after generate static HTML files
    afterGenerate: new tapable_1.AsyncSeriesHook(),
    getDocumentData: new tapable_1.SyncWaterfallHook(['documentData', 'ssrContext']),
    getDocument: new tapable_1.SyncWaterfallHook(['document', 'ssrContext']),
    defineVariables: new tapable_1.SyncWaterfallHook(['variables']),
    // Called before creating pages for the first time
    initPages: new tapable_1.AsyncSeriesHook(),
    // Called when a new page is added
    onCreatePage: new tapable_1.AsyncSeriesHook(['page']),
    // Called when all pages are added to our `source`
    onCreatePages: new tapable_1.AsyncSeriesHook(),
    // Emit pages as .saberpage files when necessary
    emitPages: new tapable_1.AsyncSeriesHook(),
    // Call this hook to manipulate a page, it's usually used by file watcher
    manipulatePage: new tapable_1.AsyncSeriesHook(['data']),
    // Call when server renderer is created and updated
    onCreateRenderer: new tapable_1.AsyncSeriesHook(['renderer', 'isFirstTime']),
    // Called before exporting a page as static HTML file
    beforeExportPage: new tapable_1.AsyncSeriesHook(['context', 'exportedPage']),
    // Called after exporting a page
    afterExportPage: new tapable_1.AsyncSeriesHook(['context', 'exportedPage']),
    // Called after creating the server
    onCreateServer: new tapable_1.SyncHook(['server'])
};
